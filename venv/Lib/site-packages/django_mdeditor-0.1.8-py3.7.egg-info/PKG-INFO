Metadata-Version: 1.1
Name: django-mdeditor
Version: 0.1.8
Summary: A simple Django app to edit markdown text.
Home-page: UNKNOWN
Author: pylixm
Author-email: pyli.xm@gmail.com
License: GPL-3.0 License
Description: 
        # django-mdeditor
        
        
        [![ENV](https://img.shields.io/badge/release-v0.1.8-blue.svg)](https://github.com/pylixm/django-mdeditor)
        [![ENV](https://img.shields.io/badge/Chinese-v0.1.8-blue.svg)](./README_CN.md)
        [![ENV](https://img.shields.io/badge/Gitter-v0.1.8-blue.svg)](https://gitter.im/django-mdeditor/Lobby)
        [![ENV](https://img.shields.io/badge/python-2.x/3.x-green.svg)](https://github.com/pylixm/django-mdeditor)
        [![ENV](https://img.shields.io/badge/django-1.7+-green.svg)](https://github.com/pylixm/django-mdeditor)
        [![LICENSE](https://img.shields.io/badge/license-GPL3.0-green.svg)](https://github.com/pylixm/django-mdeditor/master/LICENSE.txt)
        
        ![](./django_and_editor.png)
        
        **Django-mdeditor** is Markdown Editor plugin application for [django](djangoproject.com) base on [Editor.md](https://github.com/pandao/editor.md).
        
        **Django-mdeditor** was inspired by great [django-ckeditor](https://github.com/django-ckeditor/django-ckeditor).
        
        **Note:** For Markdown page rendering issues, backend rendering is recommended. Because `Editor.md` has not been updated for a long time, some bugs and compatibility issues need to be debugged. Of course, front-end students can choose.
        
        ## Features
        
        - Almost Editor.md features 
            - Support Standard Markdown / CommonMark and GFM (GitHub Flavored Markdown);
            - Full-featured: Real-time Preview, Image (cross-domain) upload, Preformatted text/Code blocks/Tables insert, Search replace, Themes, Multi-languages;
            - Markdown Extras : Support ToC (Table of Contents), Emoji;
            - Support TeX (LaTeX expressions, Based on KaTeX), Flowchart and Sequence Diagram of Markdown extended syntax;
        - Can constom Editor.md toolbar 
        - The MDTextField field is provided for the model and can be displayed directly in the django admin.
        - The MDTextFormField is provided for the Form and ModelForm.
        - The MDEditorWidget is provided for the Admin custom widget.
        
        
        ## Quick start
        
        - Installation.
        ```bash
            pipenv install django-mdeditor
            # or
            pip install django-mdeditor
        ```
        
        - Add `mdeditor` to your INSTALLED_APPS setting like this:
        ```python
            INSTALLED_APPS = [
                ...
                'mdeditor',
            ]
        ```
        
        - Add 'media' url to your settings like this:
        ```python
        MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')
        MEDIA_URL = '/media/'
        
        ```
        Make folder `uploads/editor` in you project for media files.  
        
        - Add url to your urls like this:
        ```python
        from django.conf.urls import url, include
        from django.conf.urls.static import static
        from django.conf import settings
        ...
        
        urlpatterns = [
            ...
            url(r'mdeditor/', include('mdeditor.urls'))
        ]
        
        if settings.DEBUG:
            # static files (images, css, javascript, etc.)
            urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
        
        ```
        
        - Write your models like this:
        ```python
        from django.db import models
        from mdeditor.fields import MDTextField
        
        class ExampleModel(models.Model):
            name = models.CharField(max_length=10)
            content = MDTextField()
        ```
        
        - Register your model in `admin.py`
        
        - Run `python manage.py makemigrations` and `python manage.py migrate` to create your models.
        
        - Login Admin ,you can see a markdown editor text field like this:
        
        ![](/screenshot/admin-example.png)
        
        
        ## Usage
        
        ### Edit fields in the model using Markdown
        
        Using Markdown to edit the fields in the model, we simply replace the `TextField` of the model with` MDTextField`.
        
        ```python
        from django.db import models
        from mdeditor.fields import MDTextField
        
        class ExampleModel (models.Model):
        聽聽聽聽name = models.CharField (max_length = 10)
        聽聽聽聽content = MDTextField ()
        ```
        
        Admin in the background, will automatically display markdown edit rich text.
        
        Used in front-end template, you can use like this:
        ```python
        {% load staticfiles%}
        <! DOCTYPE html>
        <html lang = "en">
        聽聽聽聽<head>
        聽聽聽聽聽聽聽聽<meta http-equiv = "Content-Type" content = "text / html; charset = utf-8" />
        
        聽聽聽聽</ head>
        聽聽聽聽<body>
        聽聽聽聽聽聽聽聽<form method = "post" action = "./">
        聽聽聽聽聽聽聽聽聽聽聽聽{% csrf_token%}
        聽聽聽聽聽聽聽聽聽聽聽聽{{form.media}}
        聽聽聽聽聽聽聽聽聽聽聽聽{{form.as_p}}
        聽聽聽聽聽聽聽聽聽聽聽聽<p> <input type = "submit" value = "post"> </ p>
        聽聽聽聽聽聽聽聽</ form>
        聽聽聽聽</ body>
        </ html>
        
        ```
        
        ### Edit fields in the Form using markdown
        
        Use markdown to edit fields in the Form, use `MDTextFormField` instead of` forms.CharField`, as follows:
        ```python
        from mdeditor.fields import MDTextFormField
        
        class MDEditorForm (forms.Form):
        聽聽聽聽name = forms.CharField ()
        聽聽聽聽content = MDTextFormField ()
        ```
        
        `ModelForm` can automatically convert the corresponding model field to the form field, which can be used normally:
        ```python
        class MDEditorModleForm (forms.ModelForm):
        
        聽聽聽聽class Meta:
        聽聽聽聽聽聽聽聽model = ExampleModel
        聽聽聽聽聽聽聽聽fields = '__all__'
        ```
        
        ### Use the markdown widget in admin
        
        Use the markdown widget in admin like as :
        ```python
        from django.contrib import admin
        from django.db import models
        
        # Register your models here.
        from. import models as demo_models
        from mdeditor.widgets import MDEditorWidget
        
        
        class ExampleModelAdmin (admin.ModelAdmin):
        聽聽聽聽formfield_overrides = {
        聽聽聽聽聽聽聽聽models.TextField: {'widget': MDEditorWidget}
        聽聽聽聽}
        
        
        admin.site.register (demo_models.ExampleModel, ExampleModelAdmin)
        ```
        ### Customize the toolbar
        
        Add the following configuration to `settings`:
        ```python
        MDEDITOR_CONFIGS = {
            'default':{
                'width': '90% ',  # Custom edit box width
            聽聽聽聽'heigth': 500,  # Custom edit box height
            聽聽聽聽'toolbar': ["undo", "redo", "|",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"bold", "del", "italic", "quote", "ucwords", "uppercase", "lowercase", "|",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"h1", "h2", "h3", "h5", "h6", "|",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"list-ul", "list-ol", "hr", "|",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"link", "reference-link", "image", "code", "preformatted-text", "code-block", "table", "datetime"
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"emoji", "html-entities", "pagebreak", "goto-line", "|",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"help", "info",
            聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽聽"||", "preview", "watch", "fullscreen"],  # custom edit box toolbar 
            聽聽聽聽'upload_image_formats': ["jpg", "jpeg", "gif", "png", "bmp", "webp"],  # image upload format type
            聽聽聽聽'image_floder': 'editor',  # image save the folder name
            聽聽聽聽'theme': 'default',  # edit box theme, dark / default
            聽聽聽聽'preview_theme': 'default',  # Preview area theme, dark / default
            聽聽聽聽'editor_theme': 'default',  # edit area theme, pastel-on-dark / default
            聽聽聽聽'toolbar_autofixed': True,  # Whether the toolbar capitals
            聽聽聽聽'search_replace': True,  # Whether to open the search for replacement
            聽聽聽聽'emoji': True,  # whether to open the expression function
            聽聽聽聽'tex': True,  # whether to open the tex chart function
            聽聽聽聽'flow_chart': True,  # whether to open the flow chart function
            聽聽聽聽'sequence': True  # Whether to open the sequence diagram function
            }
        聽聽聽聽
        }
        ```
        
        ## Feedback 
        
        [issue]
        Welcome to use and feedback!
        
        ## Reference
        
        - [django-ckeditor] (https://github.com/django-ckeditor/django-ckeditor)
        
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.7
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
